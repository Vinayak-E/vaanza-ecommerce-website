<%- include('../layout/admin/adminHeader.ejs') -%>
<style>
.img-container {
    display: flex;
    justify-content: center;
    align-items: center;
    max-width: 100%;
    max-height: 80vh; /* Adjust the height as needed */
    overflow: hidden;
}

.img-container img {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
}

</style>
</head>

<body>

  <!-- ?PROD Only: Google Tag Manager (noscript) (Default ThemeSelection: GTM-5DDHKGP, PixInvent: GTM-5J3LMKC) -->
  <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-5DDHKGP" height="0" width="0"
      style="display: none; visibility: hidden"></iframe></noscript>
  <!-- End Google Tag Manager (noscript) -->

  <!-- Layout wrapper -->

  <div class="layout-wrapper layout-content-navbar  ">
    <div class="layout-container">

      <%- include('../layout/admin/navbar.ejs') -%>

      <!-- Content wrapper -->
      <div class="content-wrapper">

        <!-- Content -->

        <div class="container-xxl flex-grow-1 container-p-y">

          <div class="app-ecommerce">

            <!-- Add Product -->
            <div
              class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-6 gap-4 gap-md-0">

              <div class="d-flex flex-column justify-content-center">
                <h3 class="mb-1">Add a new Product</h3>
                  <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                      <li class="breadcrumb"><a href="/admin/products">Products >></a></li>
                      <li class="breadcrumb-item active" aria-current="page">Add Product</li>
                    </ol>
                  </nav>
              </div>
              </div>

            </div>

            <div class="row">

              <!-- First column-->
              <div class="col-12 col-lg-8">
                <!-- Product Information -->
                <div class="card mb-6">
                  <div class="card-header">
                    <h5 class="card-tile mb-0">Product information</h5>
                  </div>
                  <form id="productForm" action="/admin/addproduct" method="post" enctype="multipart/form-data" onsubmit="return validateForm()">
                    <div class="card-body">
                      <div class="form-floating form-floating-outline mb-5">
                        <input type="text" class="form-control" id="product_title" name="name" placeholder="Type here">
                        <label for="ecommerce-product-name">Name</label>
                        <p id="productNameErr" style="color: red; display: none;"></p>
                      </div>
                      <div class="form-group">
                        <l>Description</label>
                          <textarea class="form-control" rows="4" name="description" placeholder="Type here"
                            id="description"></textarea>
                          <p id="descErr" style="color: red; display: none;"></p>
                      </div>
                    </div>
                </div>
                <!-- /Product Information -->
<!-- Media -->
<div class="card mb-6">
  <div class="card-header d-flex justify-content-between align-items-center">
      <div class="form-group">
          <h5>Product Images</h5>
          <div class="row">
              <% for (let i = 1; i <= 4; i++) { %>
              <!-- Image Input and Preview -->
              <div class="col-lg-6 col-md-6 mb-3">
                  <label for="imageInput<%= i %>" class="file-upload">
                      <span class="file-select">Choose Image <%= i %></span>
                      <input name="images" type="file" accept="image/*" id="imageInput<%= i %>" class="imageInput" onchange="openCropper(this)">
                      <img id="imagePreview<%= i %>" class="img-preview" alt="Preview" style="display:none;">
                  </label>
              </div>
              <% } %>
          </div>
          <p id="imagesErr" style="color: red; display: none;">Please upload all four images.</p>
      </div>
  </div>
</div>

<!-- Cropper Modal -->
<div class="modal fade" id="cropperModal" tabindex="-1" aria-labelledby="cropperModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl">
      <div class="modal-content">
          <div class="modal-header">
              <h5 class="modal-title" id="cropperModalLabel">Crop Image</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
          </div>
          <div class="modal-body">
              <div class="img-container">
                  <img id="cropperImage" src="" alt="Image to crop">
              </div>
          </div>
          <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="button" id="cropButton" class="btn btn-primary">Crop</button>
          </div>
      </div>
  </div>
</div>
          

                <!-- /Media -->
                
<!-- Variants -->
<div class="card mb-6">
  <div class="card-header">
    <h5 class="card-title mb-0">Variants</h5>
  </div>
  <div class="card-body">
    <div data-repeater-list="group-a">
      <div data-repeater-item>
        <div class="row gx-5">
          <div class="mb-6 col-sm-4">
            <div class="form-floating form-floating-outline">
              <select id="product-color" class="select form-select" data-placeholder="COLOUR"
              data-allow-clear="true" name="color">
              <option value="">Select a color</option>
              <option value="White">White</option>
              <option value="Red">Red</option>
              <option value="Blue">Blue</option>
              <option value="Yellow">Yellow</option>
              <option value="Green">Green</option>
              <option value="Orange">Orange</option>
              <option value="Black">Black</option>
              <option value="Black">Grey</option>
            </select>
              <label for="product-color">COLOUR</label>
              <div id="colorErr" style="color: red; display: none;"></div>
            </div>
          </div>

          <div class="mb-6 col-sm-4">
            <div class="form-floating form-floating-outline mb-5">
              <input type="number" class="form-control" id="quantity" name="quantity">
              <label for="quantity">QUANTITY</label>
              <div id="quantityErr" style="color: red; display: none;"></div>
            </div>
          </div>

          <div class="mb-6 col-sm-4">
            <!-- Sizes section in horizontal layout -->
            <label class="d-block">Sizes</label>
            <div class="form-floating form-floating-outline">
              <div class="d-flex flex-wrap">
                <div class="form-check form-check-inline">
                  <input class="form-check-input" type="checkbox" id="sizeS" name="sizes[]" value="S">
                  <label class="form-check-label" for="sizeS">S</label>
                </div>
                <div class="form-check form-check-inline">
                  <input class="form-check-input" type="checkbox" id="sizeM" name="sizes[]" value="M">
                  <label class="form-check-label" for="sizeM">M</label>
                </div>
                <div class="form-check form-check-inline">
                  <input class="form-check-input" type="checkbox" id="sizeL" name="sizes[]" value="L">
                  <label class="form-check-label" for="sizeL">L</label>
                </div>
                <div class="sizeErr" style="color: red; display: none;"></div>
                <!-- Add more checkboxes as needed -->
              </div>
            </div>
          </div>

        </div>
      </div>
    </div>
  </div>
</div>
<!-- /Variants -->


              </div>
              <!-- /Second column -->

              <!-- Second column -->
              <div class="col-12 col-lg-4">
                <!-- Pricing Card -->
                <div class="card mb-6">
                  <div class="card-header">
                    <h5 class="card-title mb-0">Pricing</h5>
                  </div>
                  <div class="card-body">
                    <!-- Base Price -->
                    <div class="form-floating form-floating-outline mb-5">
                      <input type="number" class="form-control" id="price" placeholder="Price" name="price"
                        aria-label="Product price">
                      <label for="ecommerce-product-price">Price</label>
                      <p id="priceErr" style="color: red; display: none;"></p>
                    </div>

                    <!-- Charge tax check box -->

                  </div>
                </div>
                <!-- /Pricing Card -->
                <!-- Organize Card -->
                <div class="card mb-6">
                  <div class="card-header">
                    <h5 class="card-title mb-0">Select Category</h5>
                  </div>
                  <div class="card-body">

                    <!-- Tags -->
                    <div class="form-floating form-floating-outline">
                      <select class="select2Basic form-select"  id="product-category" name="category" data-placeholder="Category"
                      data-allow-clear="true">
                      <option value="">Select Category</option>
                        <% for (let i = 0; i < categories.length; i++) { %>
                        <option value="<%= categories[i].name %>"><%= categories[i].name %></option>
                        <% } %>
                      </select>
                      <label for="product-category">Category</label>
                      <div id="catErr" style="color: red; display: none;"></div>
                    </div>

                  </div>
                </div>

                <div class="card mb-6">
                  <div class="card-header">
                    <h5 class="card-title mb-0">Gender</h5>
                  </div>
                  <div class="card-body">
                    <div class="form-floating form-floating-outline">
                      <select id="product-gender" class="select2Basic form-select" data-placeholder="Gender"
                        data-allow-clear="true" name="gender">
                        <option value="">Select Gender</option>
                        <option value="Men">Men</option>
                        <option value="Women">Women</option>
                      </select>
                      <label for="product-gender">Gender</label>
                      <div id="genderErr" style="color: red; display: none;"></div>
                    </div>
                  </div>
                </div>

              </div>
            </div>
            <!-- /Second column -->
          </div>
          <div class="form-group mt-3">
             <button type="submit" class="btn btn-primary">Submit</button>
            <a href="/admin/products" class="btn btn-primary">
              <span class="text">Back</span>
            </a>
          </div>
          </form>
        </div>

        <!-- / Content -->

      </div>

      <!-- / Content -->

      <div class="content-backdrop fade"></div>
    </div>
    <!-- / Layout wrapper -->

    <!-- Overlay -->
    <div class="layout-overlay layout-menu-toggle"></div>

    <!-- Drag Target Area To SlideIn Menu On Small Screens -->
    <div class="drag-target"></div>

    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Page JS -->
    <script src="../../assets/js/app-ecommerce-product-add.js"></script>

    <script>
  document.addEventListener('DOMContentLoaded', function () {
            let cropper;
            let currentImageInput;

            window.openCropper = function (input) {
            if (input.files && input.files[0]) {
            currentImageInput = input;
            const reader = new FileReader();
            reader.onload = function (e) {
            const cropperImage = document.getElementById('cropperImage');
            if (cropperImage) {
            cropperImage.src = e.target.result;
            $('#cropperModal').modal('show');
            $('#cropperModal').on('shown.bs.modal', function () {
            if (cropper) {
            cropper.destroy();
          }
          
    
            cropper = new Cropper(cropperImage, {
                          aspectRatio: 0,
                            viewMode: 1,
                            // autoCropArea: 1,
                            scalable: true,
                            zoomable: true,
                            responsive: true,
                            // background: false,
            });
         
        });
      } else {
        console.error("Cropper image element not found");
      }
    };
    reader.readAsDataURL(input.files[0]);
  }
}

            function cropImage() {
                if (cropper) {
                    const croppedCanvas = cropper.getCroppedCanvas({
                        width: 900,
                        height: 900
                    });

                    croppedCanvas.toBlob(function (blob) {
                        const newFile = new File([blob], 'croppedImage.jpg', { type: 'image/jpeg', lastModified: Date.now() });

                        const dataTransfer = new DataTransfer();
                        dataTransfer.items.add(newFile);
                        currentImageInput.files = dataTransfer.files;

                        const url = URL.createObjectURL(blob);
                        const previewId = currentImageInput.id.replace('Input', 'Preview');
                        const preview = document.getElementById(previewId);
                        if (preview) {
                            preview.src = url;
                            preview.style.display = 'block';
                        } else {
                            console.error("Preview image element not found for ID: " + previewId);
                        }

                        $('#cropperModal').modal('hide');
                    });
                } else {
                    console.error("Cropper is not initialized");
                }
            }

            document.getElementById('cropButton').addEventListener('click', cropImage);
        });

  for (let i = 1; i <= 4; i++) {
    handleImageUpload(`imageInput${i}`, `croppedImagePreview${i}`);
  }

  function handleImageUpload(inputId, previewId) {
    const input = document.getElementById(inputId);
    const preview = document.getElementById(previewId);

    input.addEventListener('change', function () {
      openCropper(input);
    });

    preview.addEventListener('click', function () {
      input.click();
    });
  }

  $('#cropperModal').on('shown.bs.modal', function () {
    if (cropper) {
      cropper.resize();
    }
  });


function validateForm() {
  let isValid = true;

  const productName = document.getElementById('product_title').value.trim();
  if (productName === '') {
    document.getElementById('productNameErr').innerText = 'Product name is required';
    document.getElementById('productNameErr').style.display = 'block';
    isValid = false;
  } else {
    document.getElementById('productNameErr').style.display = 'none';
  }

  const description = document.getElementById('description').value.trim();
  if (description === '') {
    document.getElementById('descErr').innerText = 'Description is required';
    document.getElementById('descErr').style.display = 'block';
    isValid = false;
  } else {
    document.getElementById('descErr').style.display = 'none';
  }

  const price = document.getElementById('price').value.trim();
  if (price === '' || isNaN(price) || price <= 0) {
    document.getElementById('priceErr').innerText = 'Valid price is required';
    document.getElementById('priceErr').style.display = 'block';
    isValid = false;
  } else {
    document.getElementById('priceErr').style.display = 'none';
  }

  const category = document.getElementById('product-category').value.trim();
  if (category === '') {
    document.getElementById('catErr').innerText = 'Category is required';
    document.getElementById('catErr').style.display = 'block';
    isValid = false;
  } else {
    document.getElementById('catErr').style.display = 'none';
  }

  const gender = document.getElementById('product-gender').value.trim();
  if (gender === '') {
    document.getElementById('genderErr').innerText = 'Gender is required';
    document.getElementById('genderErr').style.display = 'block';
    isValid = false;
  } else {
    document.getElementById('genderErr').style.display = 'none';
  }

  const color = document.getElementById('product-color').value.trim();
  if (color === '') {
    document.getElementById('colorErr').innerText = 'Color is required';
    document.getElementById('colorErr').style.display = 'block';
    isValid = false;
  } else {
    document.getElementById('colorErr').style.display = 'none';
  }

  const quantity = document.getElementById('quantity').value.trim();
  if (quantity === '' || isNaN(quantity) || quantity <= 0) {
    document.getElementById('quantityErr').innerText = 'Valid quantity is required';
    document.getElementById('quantityErr').style.display = 'block';
    isValid = false;
  } else {
    document.getElementById('quantityErr').style.display = 'none';
  }

  const sizes = document.querySelectorAll('[name="sizes[]"]:checked');
  if (sizes.length === 0) {
    document.querySelector('.sizeErr').innerText = 'At least one size must be selected';
    document.querySelector('.sizeErr').style.display = 'block';
    isValid = false;
  } else {
    document.querySelector('.sizeErr').style.display = 'none';
  }



  
  if (!checkImages()) {
    isValid = false;
  }

  return isValid;
}
function checkImages() {
  let selectedCount = 0;
  let validTypes = ['image/jpeg', 'image/jpg'];
  let imagesErr = document.getElementById('imagesErr');

  imagesErr.style.display = 'none'; // Hide the error message initially

  for (let i = 1; i <= 4; i++) {
    const input = document.getElementById(`imageInput${i}`);
    
    if (input.files && input.files.length > 0) {
      const fileType = input.files[0].type;

      if (!validTypes.includes(fileType)) {
        imagesErr.innerText = `Image ${i} must be a JPG file`;
        imagesErr.style.display = 'block';
        return false;
      }

      selectedCount++;
    }
  }

  if (selectedCount !== 4) {
    imagesErr.innerText = 'All 4 images are required';
    imagesErr.style.display = 'block';
    return false;
  }

  imagesErr.style.display = 'none'; // No errors, hide the message
  return true;
}



function handleSubmit(event) {
  event.preventDefault();
  console.log("Form submission attempted");


  if (!validateForm()) {
    console.log("Form validation failed");
    return;
  }


  const form = document.getElementById('productForm');
 
  const formData = new FormData(form);


  fetch(form.action, {
    method: 'POST',
    body: formData
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      Swal.fire({
        icon: 'success',
        title: 'Success',
        text: 'Product added successfully!',
        timer: 2000,
        showConfirmButton: false
      }).then(() => {
        window.location.href = '/admin/products';
      });
    } else {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'An error occurred while adding the product.'
      });
    }
  })
  .catch(error => {
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'An error occurred while adding the product.'
    });
  });
}

document.getElementById('productForm').addEventListener('submit', handleSubmit);

    </script>
    
    <%- include('../layout/admin/adminFooter.ejs') -%>